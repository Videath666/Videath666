import randomimport stringimport smtplibfrom email.mime.text import MIMETextfrom email.mime.multipart import MIMEMultipartimport timeimport requestsfrom telethon.sync import TelegramClientfrom telethon.tl.functions.channels import ReportSpamRequestfrom colorama import init, Fore# Initialize coloramainit(autoreset=True)print(Fore.MAGENTA + " _    __________  __    ____________")print(Fore.MAGENTA + "| |  / /  _/ __ \/ /   / ____/_  __/")print(Fore.MAGENTA + "| | / // // / / / /   / __/   / /   ")print(Fore.MAGENTA + "| |/ // // /_/ / /___/ /___  / /    ")print(Fore.MAGENTA + "|___/___/\____/_____/_____/ /_/" + Fore.RESET)access_codes = ['VI666'] #парольsenders = {    'почта@mail.ru': 'осмт код',}receivers = ["spam@telegram.org",    "ceo@telegram.org",    "StopCA@telegram.org",    "sticker@telegram.org",    "sms@telegram.org",    "security@telegram.org",    "support@telegram.org",    "abuse@telegram.org",    "DMCA@telegram.org",    "recover@telegram.org"]class UserAgent:    def __init__(self):        pass    def random(self):        return "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"        #юзер агент уже работает можно пользоватся        def print_menu():    print(Fore.MAGENTA + "Telegram @H_Violet")    print(Fore.MAGENTA +"[1] Снос чатов/каналов/ботов")    print(Fore.MAGENTA +"[2] Снос аккаунта")    print(Fore.MAGENTA +"[3] Сессия (Без 2FA)")def handle_email():    subject = input(Fore.MAGENTA + "Тема: " + Fore.RESET)    body = input(Fore.MAGENTA + "Текст: " + Fore.RESET)    for receiver in receivers:        for sender_email, sender_password in senders.items():            success = send_email(receiver, sender_email, sender_password, subject, body)            if success:                print(Fore.GREEN + f"Отправлено для {receiver} от {sender_email}" + Fore.RESET)            else:                print(Fore.RED + f"Не отправлено для {receiver} от {sender_email}" + Fore.RESET)def handle_web_complaint():    url = 'https://telegram.org/support'    user_agent = UserAgent()    text = input(Fore.MAGENTA + "User: " + Fore.RESET)    count = int(input(Fore.MAGENTA + "Номер телефона (с +): " + Fore.RESET))    contact = [            "Vibest",        "Visnos",        "lol",        "alexmaleev",        "permistsoso",        "antipovloshara",        "VIOLET",        "violet",        "vilol",        "79256666633",        "+2266346666",        "vilololo",        "yavi",        "vil",    ]    for _ in range(count):        chosen_contact = random.choice(contact)        send_web_complaint(url, text, chosen_contact, user_agent)        time.sleep(0.01)def handle_session_complaint():    API_ID = 'апиайди'    API_HASH = 'апихэш'    PHONE_NUMBER = 'номер'    #для сноса сессии, возможно не ворк на доработке    def send_telegram_complaint(channel_username, text):        with TelegramClient('session', API_ID, API_HASH) as client:            client.send_message(channel_username, text)            client(ReportSpamRequest(channel_username))    channel_username = input(Fore.MAGENTA + "Тег канала: " + Fore.RESET)    text = input(Fore.MAGENTA + "Текст жалобы: " + Fore.RESET)    send_telegram_complaint(channel_username, text)    print(Fore.GREEN + "Успешно!" + Fore.RESET)def send_email(receiver, sender_email, sender_password, subject, body):    for sender_email, sender_password in senders.items():        try:            msg = MIMEMultipart()            msg['From'] = sender_email            msg['To'] = receiver            msg['Subject'] = subject            msg.attach(MIMEText(body, 'plain'))            server = smtplib.SMTP('smtp.mail.ru', 587)            server.starttls()            server.login(sender_email, sender_password)            server.sendmail(sender_email, receiver, msg.as_string())            time.sleep(3)            server.quit()            return True        except Exception as e:            continue    return Falsedef send_web_complaint(url, text, contact, user_agent):    headers = {        'User-Agent': user_agent.random()    }    payload = {        'text': text,        'contact': contact    }    proxies = {        'http': '103.37.82.134:39873',        'http': '85.118.105.20:45227',        'http': '72.195.34.41:4145',        'http': '45.79.31.207:9794',        'http': '138.0.207.18:38328',        'http': '185.89.156.130:5678',        'http': '117.250.3.58:8080',        'http': '51.222.241.157:2275',        'http': '45.120.38.246:1088',        'http': '202.40.178.34:2930',        'http': '67.206.213.202:55555',    }    try:        response = requests.post(url, data=payload, headers=headers, proxies=proxies)        if response.status_code == 200:            print(Fore.GREEN + f"Успешно! USer: {text}, Contact: {contact}")        else:            print(Fore.RED + "Что пошло не так...")    except Exception as e:        print(Fore.RED + f"Ошибка: {e}")def check_access_code():    user_input = input(Fore.MAGENTA + "Введите ключ доступа: " + Fore.RESET)    if user_input in access_codes:        print("\033c", end="")  # Clear the screen        print(Fore.GREEN + "Добро пожаловать!")        return True    else:        print(Fore.RED + "Неверный код")        return Falsedef main():    if check_access_code():        while True:            print_menu()            choice = input(Fore.MAGENTA + "Выберите функцию: " + Fore.RESET)            if choice == "1":                handle_email()            elif choice == "2":                handle_web_complaint()            elif choice == "3":                handle_session_complaint()            elif choice == "4":                pass            else:                print(Fore.RED + "Неверный выбор")            input(Fore.CYAN + "Нажмите любую клавишу для продолжения...")            print("\033c")                         time.sleep(0.1)if __name__ == "__main__":    main()